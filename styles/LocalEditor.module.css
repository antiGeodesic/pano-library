.container {
    height: 100%;
    width: 100%;
  
    --main-grid-col-1: 1fr;
    --main-grid-col-2: 1fr;
  
    --main-grid-row-1: 100%;
  
    display: grid;
    grid-template-columns: var(--main-grid-col-1) var(--main-grid-col-2);
    grid-template-rows: var(--main-grid-row-1);
  }
  .panoEditorMap {
    height: 100%;
    width: 100%;
    grid-column: 1;
    grid-row: 1;
  }
  .panoEditorPanel {
    grid-column: 2;
    grid-row: 1;
  
    --panoSettings-grid-col-1: 40%;
    --panoSettings-grid-col-2: 20%;
    --panoSettings-grid-col-3: auto;
  
    --panoSettings-grid-row-1: auto;
    --panoSettings-grid-row-2: 3rem;
    --panoSettings-grid-row-3: 50%;
  
  
    width: 100%;
    height: 100%;
    position: relative;
    display: grid;
    grid-template-columns: var(--panoSettings-grid-col-1) var(--panoSettings-grid-col-2) var(--panoSettings-grid-col-3);
    grid-template-rows: var(--panoSettings-grid-row-1) var(--panoSettings-grid-row-2) var(--panoSettings-grid-row-3);
  }
  
  .streetViewComponent {
    grid-column: 1 / span 3;
    grid-row: 1;
  
    width: 100%;
    aspect-ratio: 16/9;
  }
  
  
  .descriptionEditor{
    grid-column: 2;
    grid-row: 2;
  }

  .descriptionInput {
    width: 100%;
    resize: vertical;
    padding: 0.75rem;
    font-size: 1rem;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-family: inherit;
    background-color: #fff;
    color: #333;
  }
  .editorActionButtons{
    grid-column: 3;
    grid-row: 2;
  
    margin: 20px auto;
    width: 17rem;
    height: 9rem;
    background-color: #fff;
    display: grid;
    grid-template-columns: 8rem 8rem;
    grid-template-rows: 4rem 4rem;
    grid-row: auto auto;
    /*grid-column-gap: 0.5rem;
    grid-row-gap: 0.5rem;*/
    grid-gap: 1rem;
  }
  .categoryEditor{
    grid-column: 1 / span 3;
    grid-row: 3;
    width: 100%;
    height: 100%;
  
    --categoryEditor-grid-col-1: 1fr;
    --categoryEditor-grid-col-2: 1fr;
    --categoryEditor-grid-col-3: 1fr;
  
    --categoryEditor-grid-row-1: auto;
  }
  .categoryEditor_category{
    grid-column: 1 / span 3;
    grid-row: 1;
  }
  .categoryEditor_subCategory{
    width: 100%;
    justify-content: right;
  }
  .categoryEditor_subSubCategory{
    width: 50%;
  }
  
  
  .panoSettings {
    width: 100%;
    position: relative;
    display: flex;
    flex-direction: row;
  }
  
  .inactive {
    /*filter: grayscale(80%) brightness(0.2);*/
  }
  
  
  .streetView {
    width: 100%;
    aspect-ratio: 16 / 9;
  }
  
  .containerElement {
    width: 50%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .dropdown {
    background: white;
    padding: 0.5rem;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    z-index: 100;
  }
  
  .panoEditorInfoWrapper {
    padding: 1rem;
    /*max-width: 35%;*/
  }
  
  .tagList {
    width: 20rem;
    background: #f8f9fa;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .tagListItem {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
  
  .tagInput {
    flex: 1;
    padding: 0.5rem;
    border: 1px solid #ccc;
    color: black;
    border-radius: 4px;
    font-size: 1rem;
  }
  
  .tagButton,
  .removeButton {
    padding: 0.4rem 0.6rem;
    background: #0070f3;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  .removeButton {
    background: #e63946;
  }
  
  .removeButton:hover {
    background: #d62828;
  }
  
  .tagButton:hover {
    background: #0059c1;
  }
  
  .errorInput {
    border-color: red;
  }
  
  .errorButton {
    background: #ff4d4f;
  }
  
  .errorText {
    color: red;
    font-size: 0.9rem;
    margin: 0;
  }
  
  

  
  /*.saveButton {
    margin-top: 1rem;
    padding: 0.6rem 1rem;
    background: #00c853;
    color: white;
    font-weight: bold;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1rem;
    transition: background 0.2s ease;
  }
  
  .saveButton:hover {
    background: #009624;
  }*/
  
  
  
  .panoSettings {
    width: 100%;
    position: relative;
    display: flex;
    flex-direction: row;
    gap: 1rem;
  }
  
  .panoSelectionPanel {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: 1fr auto;
  }
  .publishPanel {
    grid-column: 1;
    grid-row: 2;
  
    width: 100%;
    height: 100%;
    padding:1rem;
    display: flex;
    justify-content: center;
  }
  .panoGroupingPanel {
    width: 100%;
    height: 100%;
    grid-column: 1;
    grid-row: 1;
    padding: 1rem;
    background-color: #f4f4f4;
    overflow-y: auto;
  }
  
  .savedPanoList {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .savedPanoListItem {
    padding: 1rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: row !important;
  }
  .savedPanoPreview {
    width: 100%;
    max-width: 300px;
    height: auto;
    border-radius: 6px;
    margin-bottom: 0.5rem;
    object-fit: cover;
  }
  
  .savedPanoListItemInfo {
    margin-bottom: 0.5rem;
  }
  
  .savedPanoEmpty {
    padding: 1rem;
    color: #666;
  }
  
  .publishButton {
    --publish-button-scale: 0.9;
    width: calc(100% * var(--publish-button-scale));
    height: calc(5rem * var(--publish-button-scale));
    border-radius: 10px;
    border: 3px solid #000000;
    background-color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.25s ease;
  }
  
  .publishButton:hover {
    transform: scale(calc(1 / var(--publish-button-scale)));
    border-radius: 15px;
  }
  .publishButtonToggled, .publishButtonToggled:hover {
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.2);
    transform: rotateX(180deg);
    background-color: var(--button-color) !important; /* or any highlight color */
    filter: brightness(1.1);
  }
  
  .publishButtonContent {
    user-select: none;
    display: inline-block;
    transition: all 0.25s ease;
  }
  .publishButtonContentToggled {
    user-select: none;
    transform: rotateX(-180deg);
  }
  .editButton {
    border-radius: 10px;
    border: 3px solid #000000;
    background-color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.25s ease;
  }
  
  .editButton:hover {
    transform: scale(1.05);
    border-radius: 15px;
  }
  .editButtonToggled, .editButtonToggled:hover {
    box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.2);
    transform: rotateX(180deg);
    background-color: var(--button-color) !important; /* or any highlight color */
    filter: brightness(1.1);
  }
  
  .editButtonContent {
    user-select: none;
    display: inline-block;
    transition: all 0.25s ease;
  }
  .editButtonContentToggled {
    user-select: none;
    transform: rotateX(-180deg);
  }
  /*.editButtonToggled:hover {
    transform: rotateX(180deg) scaleY(-1) scale(1.05);
    border-radius: 15px;
  }*/
  .saveButton {
    --button-color: #a0ff00;
    border: 3px solid var(--button-color);
  }
  
  .updateButton {
    --button-color: #a0ff00;
    border: 3px solid var(--button-color);
  }
  
  .splitButton {
    --button-color: #a000ff;
    border: 3px solid var(--button-color);
  }
  
  .deleteButton {
    --button-color: #ff0000;
    border: 3px solid var(--button-color);
  }
  
  .closeButton {
    --button-color: #ffa000;
    border: 3px solid var(--button-color);
    cursor: pointer;
  }

  .coverageInfo {
    grid-column: 1;
    grid-row: 2;
    display: flex;
    flex-direction: row;
  }
  .addressDisplay{
    margin-left: 1rem;
    width: 15rem;
    display: flex;
    flex-direction: column;
  }

  /*.closeButton:hover {
      background: #ddd;
    }*/
   /* .coverageDates {
        position: absolute;
      }
      .coverageDatesDropdown {
        position: relative;
    
        overflow: hidden;
        border: 2px solid red;
        z-index: 1;
        transition: all 0.5s ease;
        background-color: transparent;
    
        display: flex;
        flex-direction: column;
      }
      .coverageDatesDropdown:hover {
        transition: all 0.5s ease;
      }
      .coverageDatesDropdownItem {
        position: relative;
        overflow: hidden;
        border: 2px solid blue;
        height: 30px;
        width: 100%;
        white-space: nowrap;
        transition: border 0.3s ease;
      }
      .coverageDatesDropdownItemSelected {
        border: 3px solid red;
        z-index: -1;
      }*/



      /* LocalEditor.module.css */

.coverageDates {
    position: relative;
    width: 20rem;
    
    height: auto;
    background-color: transparent;

    
  }
  
  .coverageDatesDropdown {
    position: relative;
    height: auto;
    
    pointer-events: none;
    overflow: hidden;
    z-index: 10;
    padding: 2px;
    padding-top: 0;
  }
  
  .coverageDatesDropdown.open {

  }
  
  .coverageDatesDropdownHeader {
    
    position: relative;
    /*background-color: #f8f8f8;*/
    /*font-weight: 500;*/
    /*border-bottom: 1px solid #eee;*/
    cursor: pointer;
    display: flex;
    align-items: center;
    padding: 0.15rem 15px;
    z-index: 10;
    height: auto;
    border-radius: 0 0 0.75rem 0.75rem;
    transition: all 0.25s ease;
    outline-style:solid;
    outline-width: 2px;
    outline-color: #000000;
    margin-left: 2px;
    margin-right: 2px;;
  }
  
  .coverageDatesDropdownHeader.open {
    content: 'â–¼';
    /*margin-left: auto;*/
    border-radius: 0 0 0 0;
    font-size: 10px;
    color: #666;
    transition-delay: 0s;
  }
  .coverageDatesDropdownHeader.closed {
    transition-delay: 0.19s;
  }
  .coverageDatesDropdownList {
    pointer-events: all;
    position: relative;
    display: flex;
    flex-direction: column-reverse;
    opacity: 1;
    transform: translateY(-100%);
    transition: all 0.3s ease;
    border-radius:  0 0 0.75rem 0.75rem;
    outline-style:solid;
    outline-width: 2px;
    outline-color: #000000;
  }

  .coverageDatesDropdownList.open {
    transform: translateY(0);
    transform-origin:top;
  }

  .coverageDatesDropdown.open .coverageDatesDropdownList {
    opacity: 1;
  }
  
  .coverageDatesDropdownItem {
    height: 2rem;
    display: flex;
    align-items: center;
    
    /*background-color: #4a90e2;*/
  }
  
  .coverageDatesDropdownItem button {
    text-align: left;
    height: 100%;
    background: none;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    font-size: 14px;
    color: #333;
    transition: background-color 0.2s ease;
    width: 100%;
  }
  
  .coverageDatesDropdownItem button:hover {
    background-color: #DDDDDD;
  }
  
  .coverageDatesDropdownItemSelected {
    background-color: blue;
  }
  
  .coverageDatesDropdownItemSelected button,
  .coverageDatesDropdownItem button.disabled {
    background-color: yellow;
    color: #999;
    font-style: italic;
    cursor: default;
  }
  
  .coverageDatesDropdownItem button:focus {
    outline: none;
    background-color: yellow;
  }
  
  /* Add a subtle divider between items */
  .coverageDatesDropdownItem:not(:last-child) {
  }
  
  /* Style for when dropdown is focused */
  .coverageDatesDropdown:focus-within {
    border-color: #4a90e2;
    outline: none;
  }

  .coverageDatesDropdownItemDate {
    font-size: 1rem;
    font-weight: 400;
    text-wrap: nowrap;
    margin-left: 0.5rem;
  }

  .coverageDatesDropdownItemGen {
    --background-color: #555555;
    background-color: var(--background-color);
    height: auto;
    width: auto;
    border-radius: 0.5rem;
    border: 0.25rem solid rgb(from var(--background-color) calc(r  * 0.75) calc(g  * 0.75) calc(b  * 0.75));
    color: white;
    text-wrap: nowrap;
    padding: 0.15rem;
    text-align: center;
    font-size: 0.75rem;
    margin-left: 0.5rem;
    margin-right: 0.5rem;;
  }

  .coverageDatesDropdownItemGen1 {
    --background-color: #66311b;
  }
  .coverageDatesDropdownItemGen2 {
    --background-color: #3023a8;
  }
  .coverageDatesDropdownItemGen3 {
    --background-color: #1b9717;
  }
  .coverageDatesDropdownItemGen4 {
    --background-color: #0099ff;
  }
  .coverageDatesDropdownItemShitcam {
    --background-color: #a80000;
  }

  .coverageDatesDropdownItemUnknown {
    display: none;
    visibility: hidden;
  }